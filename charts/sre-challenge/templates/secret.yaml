apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.redis.auth.existingSecret }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Values.redis.auth.existingSecret) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $redisSecret to existing secret data or generate a random one when not exists
  {{- $redisSecret := (get $secretData "password") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $redisSecret | quote }}
